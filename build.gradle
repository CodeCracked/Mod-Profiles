import com.github.jengelman.gradle.plugins.shadow.tasks.ConfigureShadowRelocation

plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'fabric-loom' version '1.0-SNAPSHOT'
    id 'maven-publish'
    id 'java'
}

version = project.mod_version + '.' + project.mod_patch + '-' + project.minecraft_version
group = project.maven_group

// Dependency Maven Repositories
repositories {
    maven {
        name "tterrag maven"
        url "https://maven.tterrag.com/"
    }
    maven {
        name "jitpack"
        url "https://jitpack.io"
    }
}

configurations {
    shade
    implementation.extendsFrom shade
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Mod Dependencies
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
}

// Autofill fabric.mod.json values
processResources {
    def variables = [
            "version": project.version,
            "target_minecraft_versions": project.target_minecraft_versions,
            "loader_version": project.loader_version,
            "fabric_version": project.fabric_version
    ]
    inputs.properties(variables)
    filteringCharset "UTF-8"

    filesMatching("fabric.mod.json") {
        expand(variables)
    }
}

// Apply correct Java version
def targetJavaVersion = 17
tasks.withType(JavaCompile).configureEach {
    it.options.encoding = "UTF-8"
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        it.options.release = targetJavaVersion
    }
}

java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
    archivesBaseName = project.archive_base_name
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()
}

// Shadow Configuration
shadowJar {
    classifier = 'shadow'
    configurations = [project.configurations.shade]

    exclude 'META-INF/maven/**'
}
task relocateShadowJar(type: ConfigureShadowRelocation) {
    target = tasks.shadowJar
    prefix = "mod_profiles.shadow"
}
remapJar {
    classifier = 'fabric'

    dependsOn shadowJar
    input.set shadowJar.archiveFile.get()

    exclude 'META-INF/maven/**'
}
artifacts {
    archives shadowJar
    shadow shadowJar
}
tasks.shadowJar.dependsOn tasks.relocateShadowJar
tasks.shadowJar.finalizedBy tasks.remapJar

javadoc {
    source = sourceSets.main.java
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}
